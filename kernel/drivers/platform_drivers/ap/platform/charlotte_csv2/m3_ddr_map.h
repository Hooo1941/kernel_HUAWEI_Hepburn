#ifndef M3_DDR_MAP_H
#define M3_DDR_MAP_H 
#ifdef CONFIG_PM_DEL_PLATFORM_ADDR
#include <lpm_kernel_map.h>
#else
#include <global_ddr_map.h>
#endif
#define LPMCU_RAM_PHY_SIZE (384 * 1024)
#define LPMCU_RAM_SIZE (376 * 1024)
#define UCE_RAM_SIZE (32 * 1024)
#define M3_DDR_MEM_BASE_ADDR (RESERVED_LPMX_CORE_PHYMEM_BASE)
#define M3_DDR_MEM_BASE_SIZE (RESERVED_LPMX_CORE_PHYMEM_SIZE)
#define LPMCU_SECURE_DDR_BASE_ADDR (RESERVED_LPMCU_PHYMEM_BASE)
#define LPMCU_SECURE_DDR_BASE_SIZE (RESERVED_LPMCU_PHYMEM_SIZE)
#define TELE_MNTN_AREA_ADDR (M3_DDR_MEM_BASE_ADDR)
#define TELE_MNTN_AREA_SIZE 0x78000
#define M3_DDR_SHARE_MEM_DDR2FASTBOOT_BASE (TELE_MNTN_AREA_ADDR + TELE_MNTN_AREA_SIZE)
#define M3_DDR_SHARE_MEM_DDR2FASTBOOT_SIZE 0x4000
#define M3_MNTN_NOT_OVERWRITE_ADDR (M3_DDR_SHARE_MEM_DDR2FASTBOOT_BASE + M3_DDR_SHARE_MEM_DDR2FASTBOOT_SIZE)
#define M3_MNTN_NOT_OVERWRITE_SIZE 0x1400
#define M3_DDR_MEM_USED_SIZE (M3_MNTN_NOT_OVERWRITE_ADDR + M3_MNTN_NOT_OVERWRITE_SIZE - M3_DDR_MEM_BASE_ADDR)
#if (M3_DDR_MEM_USED_SIZE > (M3_DDR_MEM_BASE_SIZE))
#error m3_ddr_memory_size used beyond (M3_DDR_MEM_USED_SIZE)
#endif
#define LPMCU_FIRMWARE_PACK_BACKUP_ADDR (LPMCU_SECURE_DDR_BASE_ADDR)
#define LPMCU_FIRMWARE_PACK_BACKUP_SIZE (448 * 1024)
 #define LPMCU_FIRMWARE_BACKUP_ADDR (LPMCU_FIRMWARE_PACK_BACKUP_ADDR)
 #define LPMCU_FIRMWARE_BACKUP_SIZE (LPMCU_RAM_SIZE)
 #define LPM3_MAGIC_ADDR (LPMCU_FIRMWARE_BACKUP_ADDR + 0x044)
 #define LPMCU_DDR_RUNSPACE_ADDR (LPMCU_FIRMWARE_BACKUP_ADDR + LPMCU_FIRMWARE_BACKUP_SIZE)
 #define LPMCU_DDR_RUNSPACE_SIZE 0x10000
 #define LPMCU_SECIMG_CERT_ADDR (LPMCU_DDR_RUNSPACE_ADDR + LPMCU_DDR_RUNSPACE_SIZE)
 #define LPMCU_SECIMG_CERT_SIZE 0x2000
 #define M3_DDR_SYS_MEM_ADDR LPMCU_SECIMG_CERT_ADDR
 #define M3_DDR_SYS_MEM_USED_SIZE LPMCU_SECIMG_CERT_SIZE
 #define M3_AO_TCP_ADDR (LPMCU_DDR_RUNSPACE_ADDR + LPMCU_DDR_RUNSPACE_SIZE)
 #define M3_AO_TCP_ADDR_SIZE 0x1000
 #define LPMCU_FIRMWARE_PACK_BACKUP_USED_SIZE (M3_AO_TCP_ADDR + M3_AO_TCP_ADDR_SIZE - LPMCU_FIRMWARE_PACK_BACKUP_ADDR)
#if (LPMCU_FIRMWARE_PACK_BACKUP_USED_SIZE > (LPMCU_FIRMWARE_PACK_BACKUP_SIZE))
#error m3_system_memory_size(LPMCU_FIRMWARE_PACK_BACKUP_SIZE) used beyond (LPMCU_FIRMWARE_PACK_BACKUP_SIZE)
#endif
#if ((LPMCU_FIRMWARE_PACK_BACKUP_SIZE % (4 * 1024)) != 0)
#error LPMCU_FIRMWARE_PACK_BACKUP_SIZE should be an integral multiple of 4K
#endif
#define PMU_DUMP_ADDR (LPMCU_FIRMWARE_PACK_BACKUP_ADDR + LPMCU_FIRMWARE_PACK_BACKUP_SIZE)
#define PMU_DUMP_SIZE 1024
#define PER_CHIP_AVS_FLAG_ADDR (PMU_DUMP_ADDR + PMU_DUMP_SIZE)
#define PER_CHIP_AVS_FLAG_SIZE 1024
#define M3_DDR_RESERVED_ADDR (PER_CHIP_AVS_FLAG_ADDR + PER_CHIP_AVS_FLAG_SIZE)
#define M3_DDR_RESERVED_SIZE 0xC400
#define M3_DDR_SHARE_MEM_ADDR (M3_DDR_RESERVED_ADDR + M3_DDR_RESERVED_SIZE)
#define M3_DDR_SHARE_MEM_SIZE 0x3A000
 #define DDR_XPU_FIRMWARE_BACKUP_ADDR (M3_DDR_SHARE_MEM_ADDR)
 #define DDR_XPU_FIRMWARE_BACKUP_SIZE 0x22400
 #define DDR_XPU_FIRMWARE_CERT_BASE (DDR_XPU_FIRMWARE_BACKUP_ADDR + DDR_XPU_FIRMWARE_BACKUP_SIZE)
 #define DDR_XPU_FIRMWARE_CERT_SIZE 0x2000
 #define M3_DDR_INIT_XLOADER_TO_FASTBOOT_BASE (DDR_XPU_FIRMWARE_CERT_BASE + DDR_XPU_FIRMWARE_CERT_SIZE)
 #define M3_DDR_INIT_XLOADER_TO_FASTBOOT_SIZE 0x8000
 #define M3_DDR_STORAGE_MEM_DDR_MPU_ADDR (M3_DDR_INIT_XLOADER_TO_FASTBOOT_BASE + M3_DDR_INIT_XLOADER_TO_FASTBOOT_SIZE)
 #define M3_DDR_STORAGE_MEM_DDR_MPU_SIZE 0x200
 #define M3_DDR_STORAGE_MEM_DDR_SECURITY_ADDR (M3_DDR_STORAGE_MEM_DDR_MPU_ADDR + M3_DDR_STORAGE_MEM_DDR_MPU_SIZE)
 #define M3_DDR_STORAGE_MEM_DDR_SECURITY_SIZE 0x3A00
 #define UCE_FIRMWARE_BACKUP_ADDR (M3_DDR_STORAGE_MEM_DDR_SECURITY_ADDR + M3_DDR_STORAGE_MEM_DDR_SECURITY_SIZE)
 #define UCE_FIRMWARE_BACKUP_SIZE (UCE_RAM_SIZE)
 #define M3_DDR_SHARE_MEM_AGE_ADDR (UCE_FIRMWARE_BACKUP_ADDR + UCE_FIRMWARE_BACKUP_SIZE)
 #define M3_DDR_SHARE_MEM_AGE_SIZE 0x400
 #define M3_DDR_SHARE_MEM_RESERVED_ADDR (M3_DDR_SHARE_MEM_AGE_ADDR + M3_DDR_SHARE_MEM_AGE_SIZE)
#if (M3_DDR_SHARE_MEM_RESERVED_ADDR > (M3_DDR_SHARE_MEM_ADDR + M3_DDR_SHARE_MEM_SIZE))
#error m3_share_memory_addr(M3_DDR_SHARE_MEM_RESERVED_ADDR) used beyond (M3_DDR_SHARE_MEM_ADDR + M3_DDR_SHARE_MEM_SIZE)
#endif
#define M3_DDR_MEM_RESERVED_ADDR (M3_DDR_SHARE_MEM_ADDR + M3_DDR_SHARE_MEM_SIZE)
#if (M3_DDR_MEM_RESERVED_ADDR > (LPMCU_SECURE_DDR_BASE_ADDR + LPMCU_SECURE_DDR_BASE_SIZE))
#error m3_memory_addr(M3_DDR_MEM_RESERVED_ADDR) used beyond (LPMCU_SECURE_DDR_BASE_ADDR + LPMCU_SECURE_DDR_BASE_SIZE)
#endif
#define LPMCU_MODEM_DDR_ADDR 0x1ed80000
#define DDR_WIN_MASK 0xF0000000
#define DDR_PHY_TO_WIN(phy_addr) ((phy_addr) & DDR_WIN_MASK)
#define DDR_VIRT_TO_PHY(virt_addr,win_addr) (((virt_addr) & 0x0FFFFFFF) | (win_addr))
#define DDR_PHY_TO_VIRT(phy_addr) (((phy_addr) & 0x0FFFFFFF) | 0x10000000)
#endif
